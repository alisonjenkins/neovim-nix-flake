name: Build and Cache Nix Flake

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v29
      - name: Restore and cache Nix store
        uses: nix-community/cache-nix-action@v5
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 1073741824
          purge: true
          purge-prefixes: cache-${{ runner.os }}-
          purge-created: 0
          purge-primary-key: never
      - uses: cachix/cachix-action@v14
        with:
          name: ajenkins-public
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - uses: DeterminateSystems/flake-checker-action@main
      - uses: docker/setup-qemu-action@v3
      - name: Run `nix build`
        run: |
          CACHIX_AUTH_TOKEN="${{ secrets.CACHIX_AUTH_TOKEN }}"
          nix develop --command bash -c "nix-fast-build --command nix-fast-build --cachix-cache ajenkins-public --skip-cached --no-nom --flake '.#packages'"
      - name: Build flake
        run: nix build
      - name: Push to cache
        run: cachix push ajenkins-public $(nix path-info --all)
